// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    // Put your code here:
        DMux8Way(in=load, sel=address[6..8], a=dma, b=dmb, c=dmc, d=dmd, e=dme, f=dmf, g=dmg, h=dmh);
        RAM64(in=in, load=dma, address=address[0..5], out=ra);
        RAM64(in=in, load=dmb, address=address[0..5], out=rb);
        RAM64(in=in, load=dmc, address=address[0..5], out=rc);
        RAM64(in=in, load=dmd, address=address[0..5], out=rd);
        RAM64(in=in, load=dme, address=address[0..5], out=re);
        RAM64(in=in, load=dmf, address=address[0..5], out=rf);
        RAM64(in=in, load=dmg, address=address[0..5], out=rg);
        RAM64(in=in, load=dmh, address=address[0..5], out=rh);
        Mux8Way16(a=ra, b=rb, c=rc, d=rd, e=re, f=rf, g=rg, h=rh, sel=address[6..8], out=out);
}